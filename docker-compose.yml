version: '3'

services:
  app:
    build:
      dockerfile: app/Dockerfile
    container_name: app
    volumes:
      - ./app/src:/var/www/html
    networks:
      - dockernet

  web:
    build:
      dockerfile: web/Dockerfile
    container_name: web
    ports:
      - "8080:80"
    volumes:
      - ./app/src/public:/var/www/html/public
      - ./web/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - dockernet

  db:
    build:
      dockerfile: db/Dockerfile
    container_name: db
    environment:
      MYSQL_DATABASE: sample-db
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      TZ: "Asia/Tokyo"
    ports:
      - '3306:3306'
    volumes:
      - ./.db/data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - dockernet

  azurite:
    build:
      dockerfile: azurite/Dockerfile
    container_name: azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - ./.azurite/data:/data
    networks:
      - dockernet
  
  keycloak:
    build: 
      dockerfile: keycloak/Dockerfile
    container_name: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
    networks:
      - dockernet


networks:
  dockernet:
    driver: bridge
    name: dockernet